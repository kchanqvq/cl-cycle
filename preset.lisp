(in-package #:sc-user)

(defun setup-server ()
  (defparameter *master-bus* (bus-audio :chanls 2))
  (defparameter *sidechain-bus* (bus-audio :chanls 2))
  (defparameter *drum-bus* (bus-audio :chanls 2))
  (defparameter *echo-bus* (bus-audio :chanls 2))
  (proxy :master (let* ((sig (in.ar *master-bus* 2))
                        (sig (compander.ar sig sig 0.3 1.0 0.7 0.01 0.1 :mul 0.5))
                        (sig (clip.ar (limiter.ar sig) -1 1)))
                   (out.ar 0 sig)))
  (proxy :sidechain
         (let* ((sig (in.ar *sidechain-bus* 2))
                (sig (compander.ar sig (in.ar *drum-bus* 2)
                                   0.05 1.0 0.1 0.01 0.05)))
           (out.ar *master-bus* sig)))
  (proxy :echo
         (let* ((sig (in.ar *echo-bus* 2))
                (sig (hpf.ar sig 100))
                (sig (freeverb2.ar (car sig) (cadr sig) :mix 1.0 :room 4)))
           (out.ar *master-bus* sig)))
  (proxy :drum
         (let* ((sig (in.ar *drum-bus* 2)))
           (out.ar *master-bus* sig)))
  (defsynth saw-synth ((freq 440) (duration 4.0) (amp 0.5)
                       (cutoff 1.0) (decay 0.1) (pan 0.0)
                       (reverb 0.0))
    (let* ((env (env-gen.kr (env (list 1.0 0.2 0)
                                 (list (* duration .2)
                                       duration))
                            :act :free))
           (fil (env-gen.kr (env (list (* 4 cutoff) cutoff) (list decay))))
           (sig (rlpf.ar (saw.ar freq env) (* freq fil) 0.5 amp))
           (sig (softclip sig))
           (sig (pan2.ar sig pan)))
      (out.ar *sidechain-bus* (* sig (- 1.0 reverb)))
      (out.ar *echo-bus* (* sig reverb))))
  (defsynth saw-bass ((freq 440) (duration 4.0) (amp 0.5) (cutoff 1.0))
    (let* ((env (env-gen.kr (env (list 1.0 0.2 0)
                                 (list (* duration .2)
                                       duration))
                            :act :free))
           (fil (env-gen.kr (env (list (* 8 cutoff) cutoff)
                                 (list 0.15))))
           (sig (rlpf.ar (+ (pan2.ar (saw.ar (* freq 1.01) env) -0.1)
                            (pan2.ar (saw.ar freq env) 0.0)
                            (pan2.ar (saw.ar (* freq 0.99) env) 0.1))
                         (* freq fil) 0.5 amp))
           (sig (distort sig)))
      (out.ar *sidechain-bus* sig)))
  (defsynth bass-drum ((amp 1.0))
    (let* ((env (env-gen.kr (env (list amp amp 0) (list 0.08 0.1)) :act :free))
           (freq (env-gen.kr (env (list 800 100 50 40)
                                  (list 0.02 0.05 0.1))))
           (sig (softclip (sin-osc.ar freq 0 env))))
      (out.ar *drum-bus* (list sig sig)))))
